{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = process.env.REACT_APP_cms_base_url;\nconst apiKey = process.env.REACT_APP_cms_api_token;\nexport async function fetchAllPublications(limit = 10, sortBy = \"publication\", sortOrder = \"desc\") {\n  let allPublications = [];\n  let page = 1;\n  let totalPages;\n  try {\n    do {\n      const response = await axios.get(`${baseURL}/api/publications?populate=*&sort=${sortBy}:${sortOrder}&pagination[page]=${page}&pagination[pageSize]=${limit}`, {\n        headers: {\n          Authorization: `Bearer ${apiKey}`\n        }\n      });\n      const {\n        data,\n        meta\n      } = response.data;\n      allPublications = allPublications.concat(data);\n      totalPages = meta.pagination.pageCount; // Corrected to use pageCount instead of totalPages\n      page++;\n    } while (page <= totalPages);\n    return allPublications;\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return []; // Return empty array on error\n  }\n}\nexport default {\n  fetchAllPublications\n};","map":{"version":3,"names":["axios","baseURL","process","env","REACT_APP_cms_base_url","apiKey","REACT_APP_cms_api_token","fetchAllPublications","limit","sortBy","sortOrder","allPublications","page","totalPages","response","get","headers","Authorization","data","meta","concat","pagination","pageCount","error","console"],"sources":["/Users/wanghley/Workspace/Projects/wanghley.com/src/api/publication.js"],"sourcesContent":["import axios from \"axios\";\n\nconst baseURL = process.env.REACT_APP_cms_base_url;\nconst apiKey = process.env.REACT_APP_cms_api_token;\n\nexport async function fetchAllPublications(limit = 10, sortBy = \"publication\", sortOrder = \"desc\") {\n    let allPublications = [];\n    let page = 1;\n    let totalPages;\n\n    try {\n        do {\n            const response = await axios.get(\n                `${baseURL}/api/publications?populate=*&sort=${sortBy}:${sortOrder}&pagination[page]=${page}&pagination[pageSize]=${limit}`,\n                {\n                    headers: {\n                        Authorization: `Bearer ${apiKey}`\n                    }\n                }\n            );\n\n            const { data, meta } = response.data;\n            allPublications = allPublications.concat(data);\n\n            totalPages = meta.pagination.pageCount; // Corrected to use pageCount instead of totalPages\n            page++;\n        } while (page <= totalPages);\n        \n        return allPublications;\n    } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        return []; // Return empty array on error\n    }\n}\n\nexport default { fetchAllPublications };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAClD,MAAMC,MAAM,GAAGH,OAAO,CAACC,GAAG,CAACG,uBAAuB;AAElD,OAAO,eAAeC,oBAAoBA,CAACC,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,aAAa,EAAEC,SAAS,GAAG,MAAM,EAAE;EAC/F,IAAIC,eAAe,GAAG,EAAE;EACxB,IAAIC,IAAI,GAAG,CAAC;EACZ,IAAIC,UAAU;EAEd,IAAI;IACA,GAAG;MACC,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAC5B,GAAGd,OAAO,qCAAqCQ,MAAM,IAAIC,SAAS,qBAAqBE,IAAI,yBAAyBJ,KAAK,EAAE,EAC3H;QACIQ,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUZ,MAAM;QACnC;MACJ,CACJ,CAAC;MAED,MAAM;QAAEa,IAAI;QAAEC;MAAK,CAAC,GAAGL,QAAQ,CAACI,IAAI;MACpCP,eAAe,GAAGA,eAAe,CAACS,MAAM,CAACF,IAAI,CAAC;MAE9CL,UAAU,GAAGM,IAAI,CAACE,UAAU,CAACC,SAAS,CAAC,CAAC;MACxCV,IAAI,EAAE;IACV,CAAC,QAAQA,IAAI,IAAIC,UAAU;IAE3B,OAAOF,eAAe;EAC1B,CAAC,CAAC,OAAOY,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,EAAE,CAAC,CAAC;EACf;AACJ;AAEA,eAAe;EAAEhB;AAAqB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}