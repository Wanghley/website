{"ast":null,"code":"var _jsxFileName = \"/Users/wanghley/Workspace/Projects/wanghley.com/src/components/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Import PropTypes for validation\nimport './css/Card.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt, faBook } from '@fortawesome/free-solid-svg-icons'; // Import necessary icons from Font Awesome\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'; // Import necessary icons from Font Awesome\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  imageUrl,\n  title,\n  date,\n  teaser,\n  category,\n  slug,\n  sourceURL = \"#\",\n  demoURL = \"#\",\n  isBlogPost = false\n}) => {\n  const truncatedTeaser = truncateText(teaser, 100);\n  const projectLink = `${slug}`;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: projectLink,\n      className: \"card__link\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__img\",\n        style: {\n          backgroundImage: `url(${imageUrl})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__date\",\n          children: formatDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__img--hover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"card__title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"card__category\",\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card__teaser\",\n        children: truncatedTeaser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__icons\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: projectLink,\n          className: \"card__icon\",\n          title: isBlogPost ? \"Read Full Post\" : \"Read More\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), !isBlogPost && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: sourceURL,\n            className: \"card__icon\",\n            title: \"Source\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faGithub\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: demoURL,\n            className: \"card__icon\",\n            title: \"Demo\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faExternalLinkAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = Card;\nconst truncateText = (text, maxLength) => {\n  if (!text) return ''; // Handle case when text is undefined or null\n  if (text.length <= maxLength) return text;\n  const truncated = text.substring(0, maxLength);\n  return truncated.substring(0, truncated.lastIndexOf(' ')) + '...';\n};\n\n// format date to human readable format yyyy-mm-dd to Month dd, yyyy\nconst formatDate = date => {\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return new Date(date).toLocaleDateString(undefined, options);\n};\n\n// Prop types validation\nCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  teaser: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  sourceURL: PropTypes.string,\n  demoURL: PropTypes.string,\n  isBlogPost: PropTypes.bool\n};\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","PropTypes","FontAwesomeIcon","faExternalLinkAlt","faBook","faGithub","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","imageUrl","title","date","teaser","category","slug","sourceURL","demoURL","isBlogPost","truncatedTeaser","truncateText","projectLink","className","children","to","style","backgroundImage","formatDate","fileName","_jsxFileName","lineNumber","columnNumber","icon","href","target","rel","_c","text","maxLength","length","truncated","substring","lastIndexOf","options","year","month","day","Date","toLocaleDateString","undefined","propTypes","string","isRequired","bool","$RefreshReg$"],"sources":["/Users/wanghley/Workspace/Projects/wanghley.com/src/components/Card.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'; // Import PropTypes for validation\nimport './css/Card.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt, faBook } from '@fortawesome/free-solid-svg-icons'; // Import necessary icons from Font Awesome\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'; // Import necessary icons from Font Awesome\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\n\nconst Card = ({ imageUrl, title, date, teaser, category, slug, sourceURL = \"#\", demoURL = \"#\", isBlogPost = false }) => {\n    const truncatedTeaser = truncateText(teaser, 100);\n    const projectLink = `${slug}`;\n\n    return (\n        <article className=\"card\">\n            <Link to={projectLink} className=\"card__link\">\n                <div className=\"card__img\" style={{ backgroundImage: `url(${imageUrl})` }}>\n                    <div className=\"card__date\">{formatDate(date)}</div>\n                    <div className=\"card__img--hover\"></div>\n                </div>\n            </Link>\n            <div className=\"card__info\">\n                <h3 className=\"card__title\">{title}</h3>\n                <span className=\"card__category\">{category}</span>\n\n                <p className=\"card__teaser\">{truncatedTeaser}</p>\n                <div className=\"card__icons\">\n                    <Link to={projectLink} className=\"card__icon\" title={isBlogPost ? \"Read Full Post\" : \"Read More\"}>\n                        <FontAwesomeIcon icon={faBook} />\n                    </Link>\n                    {!isBlogPost && (\n                        <>\n                            <a href={sourceURL} className=\"card__icon\" title=\"Source\" target=\"_blank\" rel=\"noreferrer\">\n                                <FontAwesomeIcon icon={faGithub} />\n                            </a>\n                            <a href={demoURL} className=\"card__icon\" title=\"Demo\" target=\"_blank\" rel=\"noreferrer\">\n                                <FontAwesomeIcon icon={faExternalLinkAlt} />\n                            </a>\n                        </>\n                    )}\n                </div>\n            </div>\n        </article>\n    );\n}\n\nconst truncateText = (text, maxLength) => {\n    if (!text) return ''; // Handle case when text is undefined or null\n    if (text.length <= maxLength) return text;\n    const truncated = text.substring(0, maxLength);\n    return truncated.substring(0, truncated.lastIndexOf(' ')) + '...';\n};\n\n// format date to human readable format yyyy-mm-dd to Month dd, yyyy\nconst formatDate = (date) => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return new Date(date).toLocaleDateString(undefined, options);\n}\n\n// Prop types validation\nCard.propTypes = {\n    imageUrl: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    teaser: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n    sourceURL: PropTypes.string,\n    demoURL: PropTypes.string,\n    isBlogPost: PropTypes.bool\n};\n\nexport default Card;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}