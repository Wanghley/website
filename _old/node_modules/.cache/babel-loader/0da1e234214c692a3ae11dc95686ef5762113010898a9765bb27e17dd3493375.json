{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport { RadioGroupController, useMediaContext, menuContext, MediaRemoteControl, MediaPlayerInstance, sortVideoQualities } from './vidstack-C-WrcxmD.js';\nimport { useMediaContext as useMediaContext$1 } from './vidstack-Xovmcdt1.js';\nimport { prop, method, Component, hasProvidedContext, useContext, effect, useSignal, isString } from './vidstack-CH225ns1.js';\nconst DEFAULT_PLAYBACK_RATES = [0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\nclass SpeedRadioGroup extends Component {\n  static props = {\n    normalLabel: \"Normal\",\n    rates: DEFAULT_PLAYBACK_RATES\n  };\n  #media;\n  #menu;\n  #controller;\n  get value() {\n    return this.#controller.value;\n  }\n  get disabled() {\n    const {\n        rates\n      } = this.$props,\n      {\n        canSetPlaybackRate\n      } = this.#media.$state;\n    return !canSetPlaybackRate() || rates().length === 0;\n  }\n  constructor() {\n    super();\n    this.#controller = new RadioGroupController();\n    this.#controller.onValueChange = this.#onValueChange.bind(this);\n  }\n  onSetup() {\n    this.#media = useMediaContext();\n    if (hasProvidedContext(menuContext)) {\n      this.#menu = useContext(menuContext);\n    }\n  }\n  onConnect(el) {\n    effect(this.#watchValue.bind(this));\n    effect(this.#watchHintText.bind(this));\n    effect(this.#watchControllerDisabled.bind(this));\n  }\n  getOptions() {\n    const {\n      rates,\n      normalLabel\n    } = this.$props;\n    return rates().map(rate => ({\n      label: rate === 1 ? normalLabel : rate + \"\\xD7\",\n      value: rate.toString()\n    }));\n  }\n  #watchValue() {\n    this.#controller.value = this.#getValue();\n  }\n  #watchHintText() {\n    const {\n        normalLabel\n      } = this.$props,\n      {\n        playbackRate\n      } = this.#media.$state,\n      rate = playbackRate();\n    this.#menu?.hint.set(rate === 1 ? normalLabel() : rate + \"\\xD7\");\n  }\n  #watchControllerDisabled() {\n    this.#menu?.disable(this.disabled);\n  }\n  #getValue() {\n    const {\n      playbackRate\n    } = this.#media.$state;\n    return playbackRate().toString();\n  }\n  #onValueChange(value, trigger) {\n    if (this.disabled) return;\n    const rate = +value;\n    this.#media.remote.changePlaybackRate(rate, trigger);\n    this.dispatch(\"change\", {\n      detail: rate,\n      trigger\n    });\n  }\n}\nconst speedradiogroup__proto = SpeedRadioGroup.prototype;\nprop(speedradiogroup__proto, \"value\");\nprop(speedradiogroup__proto, \"disabled\");\nmethod(speedradiogroup__proto, \"getOptions\");\nfunction useMediaRemote(target) {\n  const media = useMediaContext$1(),\n    remote = React.useRef();\n  if (!remote.current) {\n    remote.current = new MediaRemoteControl();\n  }\n  React.useEffect(() => {\n    const ref = target && \"current\" in target ? target.current : target,\n      isPlayerRef = ref instanceof MediaPlayerInstance,\n      player = isPlayerRef ? ref : media?.player;\n    remote.current.setPlayer(player ?? null);\n    remote.current.setTarget(ref ?? null);\n  }, [media, target && \"current\" in target ? target.current : target]);\n  return remote.current;\n}\nfunction useVideoQualityOptions({\n  auto = true,\n  sort = \"descending\"\n} = {}) {\n  const media = useMediaContext$1(),\n    {\n      qualities,\n      quality,\n      autoQuality,\n      canSetQuality\n    } = media.$state,\n    $qualities = useSignal(qualities);\n  useSignal(quality);\n  useSignal(autoQuality);\n  useSignal(canSetQuality);\n  return React.useMemo(() => {\n    const sortedQualities = sortVideoQualities($qualities, sort === \"descending\"),\n      options = sortedQualities.map(q => {\n        return {\n          quality: q,\n          label: q.height + \"p\",\n          value: getQualityValue(q),\n          bitrateText: q.bitrate && q.bitrate > 0 ? `${(q.bitrate / 1e6).toFixed(2)} Mbps` : null,\n          get selected() {\n            return q === quality();\n          },\n          get autoSelected() {\n            return autoQuality();\n          },\n          select(trigger) {\n            const index = qualities().indexOf(q);\n            if (index >= 0) media.remote.changeQuality(index, trigger);\n          }\n        };\n      });\n    if (auto) {\n      options.unshift({\n        quality: null,\n        label: isString(auto) ? auto : \"Auto\",\n        value: \"auto\",\n        bitrateText: null,\n        get selected() {\n          return autoQuality();\n        },\n        get autoSelected() {\n          return autoQuality();\n        },\n        select(trigger) {\n          media.remote.requestAutoQuality(trigger);\n        }\n      });\n    }\n    Object.defineProperty(options, \"disabled\", {\n      get() {\n        return !canSetQuality() || $qualities.length <= 1;\n      }\n    });\n    Object.defineProperty(options, \"selectedQuality\", {\n      get() {\n        return quality();\n      }\n    });\n    Object.defineProperty(options, \"selectedValue\", {\n      get() {\n        const $quality = quality();\n        return !autoQuality() && $quality ? getQualityValue($quality) : \"auto\";\n      }\n    });\n    return options;\n  }, [$qualities, sort]);\n}\nfunction getQualityValue(quality) {\n  return quality.height + \"_\" + quality.bitrate;\n}\nfunction usePlaybackRateOptions({\n  rates = DEFAULT_PLAYBACK_RATES,\n  normalLabel = \"Normal\"\n} = {}) {\n  const media = useMediaContext$1(),\n    {\n      playbackRate,\n      canSetPlaybackRate\n    } = media.$state;\n  useSignal(playbackRate);\n  useSignal(canSetPlaybackRate);\n  return React.useMemo(() => {\n    const options = rates.map(opt => {\n      const label = typeof opt === \"number\" ? opt === 1 && normalLabel ? normalLabel : opt + \"x\" : opt.label,\n        rate = typeof opt === \"number\" ? opt : opt.rate;\n      return {\n        label,\n        value: rate.toString(),\n        rate,\n        get selected() {\n          return playbackRate() === rate;\n        },\n        select(trigger) {\n          media.remote.changePlaybackRate(rate, trigger);\n        }\n      };\n    });\n    Object.defineProperty(options, \"disabled\", {\n      get() {\n        return !canSetPlaybackRate() || !options.length;\n      }\n    });\n    Object.defineProperty(options, \"selectedValue\", {\n      get() {\n        return playbackRate().toString();\n      }\n    });\n    return options;\n  }, [rates]);\n}\nexport { DEFAULT_PLAYBACK_RATES, useMediaRemote, usePlaybackRateOptions, useVideoQualityOptions };","map":{"version":3,"names":["React","RadioGroupController","useMediaContext","menuContext","MediaRemoteControl","MediaPlayerInstance","sortVideoQualities","useMediaContext$1","prop","method","Component","hasProvidedContext","useContext","effect","useSignal","isString","DEFAULT_PLAYBACK_RATES","SpeedRadioGroup","props","normalLabel","rates","media","menu","controller","value","disabled","$props","canSetPlaybackRate","$state","length","constructor","onValueChange","bind","onSetup","onConnect","el","watchValue","watchHintText","watchControllerDisabled","getOptions","map","rate","label","toString","#watchValue","getValue","#watchHintText","playbackRate","hint","set","#watchControllerDisabled","disable","#getValue","#onValueChange","trigger","remote","changePlaybackRate","dispatch","detail","speedradiogroup__proto","prototype","useMediaRemote","target","useRef","current","useEffect","ref","isPlayerRef","player","setPlayer","setTarget","useVideoQualityOptions","auto","sort","qualities","quality","autoQuality","canSetQuality","$qualities","useMemo","sortedQualities","options","q","height","getQualityValue","bitrateText","bitrate","toFixed","selected","autoSelected","select","index","indexOf","changeQuality","unshift","requestAutoQuality","Object","defineProperty","get","$quality","usePlaybackRateOptions","opt"],"sources":["/Users/wanghley/Workspace/Projects/wanghley.com/node_modules/@vidstack/react/dev/chunks/vidstack-C4TlCb-3.js"],"sourcesContent":["\"use client\"\n\nimport * as React from 'react';\nimport { RadioGroupController, useMediaContext, menuContext, MediaRemoteControl, MediaPlayerInstance, sortVideoQualities } from './vidstack-C-WrcxmD.js';\nimport { useMediaContext as useMediaContext$1 } from './vidstack-Xovmcdt1.js';\nimport { prop, method, Component, hasProvidedContext, useContext, effect, useSignal, isString } from './vidstack-CH225ns1.js';\n\nconst DEFAULT_PLAYBACK_RATES = [0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\nclass SpeedRadioGroup extends Component {\n  static props = {\n    normalLabel: \"Normal\",\n    rates: DEFAULT_PLAYBACK_RATES\n  };\n  #media;\n  #menu;\n  #controller;\n  get value() {\n    return this.#controller.value;\n  }\n  get disabled() {\n    const { rates } = this.$props, { canSetPlaybackRate } = this.#media.$state;\n    return !canSetPlaybackRate() || rates().length === 0;\n  }\n  constructor() {\n    super();\n    this.#controller = new RadioGroupController();\n    this.#controller.onValueChange = this.#onValueChange.bind(this);\n  }\n  onSetup() {\n    this.#media = useMediaContext();\n    if (hasProvidedContext(menuContext)) {\n      this.#menu = useContext(menuContext);\n    }\n  }\n  onConnect(el) {\n    effect(this.#watchValue.bind(this));\n    effect(this.#watchHintText.bind(this));\n    effect(this.#watchControllerDisabled.bind(this));\n  }\n  getOptions() {\n    const { rates, normalLabel } = this.$props;\n    return rates().map((rate) => ({\n      label: rate === 1 ? normalLabel : rate + \"\\xD7\",\n      value: rate.toString()\n    }));\n  }\n  #watchValue() {\n    this.#controller.value = this.#getValue();\n  }\n  #watchHintText() {\n    const { normalLabel } = this.$props, { playbackRate } = this.#media.$state, rate = playbackRate();\n    this.#menu?.hint.set(rate === 1 ? normalLabel() : rate + \"\\xD7\");\n  }\n  #watchControllerDisabled() {\n    this.#menu?.disable(this.disabled);\n  }\n  #getValue() {\n    const { playbackRate } = this.#media.$state;\n    return playbackRate().toString();\n  }\n  #onValueChange(value, trigger) {\n    if (this.disabled) return;\n    const rate = +value;\n    this.#media.remote.changePlaybackRate(rate, trigger);\n    this.dispatch(\"change\", { detail: rate, trigger });\n  }\n}\nconst speedradiogroup__proto = SpeedRadioGroup.prototype;\nprop(speedradiogroup__proto, \"value\");\nprop(speedradiogroup__proto, \"disabled\");\nmethod(speedradiogroup__proto, \"getOptions\");\n\nfunction useMediaRemote(target) {\n  const media = useMediaContext$1(), remote = React.useRef();\n  if (!remote.current) {\n    remote.current = new MediaRemoteControl();\n  }\n  React.useEffect(() => {\n    const ref = target && \"current\" in target ? target.current : target, isPlayerRef = ref instanceof MediaPlayerInstance, player = isPlayerRef ? ref : media?.player;\n    remote.current.setPlayer(player ?? null);\n    remote.current.setTarget(ref ?? null);\n  }, [media, target && \"current\" in target ? target.current : target]);\n  return remote.current;\n}\n\nfunction useVideoQualityOptions({\n  auto = true,\n  sort = \"descending\"\n} = {}) {\n  const media = useMediaContext$1(), { qualities, quality, autoQuality, canSetQuality } = media.$state, $qualities = useSignal(qualities);\n  useSignal(quality);\n  useSignal(autoQuality);\n  useSignal(canSetQuality);\n  return React.useMemo(() => {\n    const sortedQualities = sortVideoQualities($qualities, sort === \"descending\"), options = sortedQualities.map((q) => {\n      return {\n        quality: q,\n        label: q.height + \"p\",\n        value: getQualityValue(q),\n        bitrateText: q.bitrate && q.bitrate > 0 ? `${(q.bitrate / 1e6).toFixed(2)} Mbps` : null,\n        get selected() {\n          return q === quality();\n        },\n        get autoSelected() {\n          return autoQuality();\n        },\n        select(trigger) {\n          const index = qualities().indexOf(q);\n          if (index >= 0) media.remote.changeQuality(index, trigger);\n        }\n      };\n    });\n    if (auto) {\n      options.unshift({\n        quality: null,\n        label: isString(auto) ? auto : \"Auto\",\n        value: \"auto\",\n        bitrateText: null,\n        get selected() {\n          return autoQuality();\n        },\n        get autoSelected() {\n          return autoQuality();\n        },\n        select(trigger) {\n          media.remote.requestAutoQuality(trigger);\n        }\n      });\n    }\n    Object.defineProperty(options, \"disabled\", {\n      get() {\n        return !canSetQuality() || $qualities.length <= 1;\n      }\n    });\n    Object.defineProperty(options, \"selectedQuality\", {\n      get() {\n        return quality();\n      }\n    });\n    Object.defineProperty(options, \"selectedValue\", {\n      get() {\n        const $quality = quality();\n        return !autoQuality() && $quality ? getQualityValue($quality) : \"auto\";\n      }\n    });\n    return options;\n  }, [$qualities, sort]);\n}\nfunction getQualityValue(quality) {\n  return quality.height + \"_\" + quality.bitrate;\n}\n\nfunction usePlaybackRateOptions({\n  rates = DEFAULT_PLAYBACK_RATES,\n  normalLabel = \"Normal\"\n} = {}) {\n  const media = useMediaContext$1(), { playbackRate, canSetPlaybackRate } = media.$state;\n  useSignal(playbackRate);\n  useSignal(canSetPlaybackRate);\n  return React.useMemo(() => {\n    const options = rates.map((opt) => {\n      const label = typeof opt === \"number\" ? opt === 1 && normalLabel ? normalLabel : opt + \"x\" : opt.label, rate = typeof opt === \"number\" ? opt : opt.rate;\n      return {\n        label,\n        value: rate.toString(),\n        rate,\n        get selected() {\n          return playbackRate() === rate;\n        },\n        select(trigger) {\n          media.remote.changePlaybackRate(rate, trigger);\n        }\n      };\n    });\n    Object.defineProperty(options, \"disabled\", {\n      get() {\n        return !canSetPlaybackRate() || !options.length;\n      }\n    });\n    Object.defineProperty(options, \"selectedValue\", {\n      get() {\n        return playbackRate().toString();\n      }\n    });\n    return options;\n  }, [rates]);\n}\n\nexport { DEFAULT_PLAYBACK_RATES, useMediaRemote, usePlaybackRateOptions, useVideoQualityOptions };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}